// SPDX-License-Identifier: (GPL-2.0 OR MIT)
/* Copyright (c) 2018-2019 Sunplus */

/dts-v1/;

#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/interrupt-controller/sp-intc.h> /* SP_INTC_EXT_INT1 */

/* Clock frequency (in Hz) of the PCB crystal for rtcclk */
#define RTCCLK_FREQ		1000000

/ {
	#address-cells = <2>;
	#size-cells = <2>;
	model = "Sunplus I143";
	compatible = "sunplus,sp-i143";

	chosen {
		linux,initrd-start = <0x00000000 0xa2000000>;
		linux,initrd-end = <0x00000000 0xa245b7d0>;
		//bootargs = "earlycon=sbi keep_bootcon loglevel=8";
		bootargs = "earlycon loglevel=8";
		stdout-path = "/soc/serial@sp_uart0";
	};

	memory@a0000000 {
		device_type = "memory";
		//reg = <0x0 0xa0000000 0x0 0x20000000>; /* 512 MB */
		//reg = <0x0 0xa0000000 0x0 0x08000000>; /* 128 MB */
		reg = <0x0 0xa0000000 0x0 0x04000000>; /* 64 MB */
	};

	cpus {
		timebase-frequency = <RTCCLK_FREQ>;
		#address-cells = <1>;
		#size-cells = <0>;
		cpu0: cpu@0 {
			compatible = "sifive,e51", "sifive,rocket0", "riscv";
			device_type = "cpu";
			i-cache-block-size = <64>;
			i-cache-sets = <128>;
			i-cache-size = <16384>;
			reg = <0>;
			riscv,isa = "rv64imac";
			status = "masked";
			cpu0_intc: interrupt-controller {
				#interrupt-cells = <1>;
				compatible = "riscv,cpu-intc";
				interrupt-controller;
			};
		};
		cpu1: cpu@1 {
			compatible = "sifive,u54-mc", "sifive,rocket0", "riscv";
			d-cache-block-size = <64>;
			d-cache-sets = <64>;
			d-cache-size = <32768>;
			d-tlb-sets = <1>;
			d-tlb-size = <32>;
			device_type = "cpu";
			i-cache-block-size = <64>;
			i-cache-sets = <64>;
			i-cache-size = <32768>;
			i-tlb-sets = <1>;
			i-tlb-size = <32>;
			mmu-type = "riscv,sv39";
			reg = <1>;
			riscv,isa = "rv64imafdc";
			tlb-split;
			status = "okay";
			cpu1_intc: interrupt-controller {
				#interrupt-cells = <1>;
				compatible = "riscv,cpu-intc";
				interrupt-controller;
			};
		};
		cpu2: cpu@2 {
			compatible = "sifive,u54-mc", "sifive,rocket0", "riscv";
			d-cache-block-size = <64>;
			d-cache-sets = <64>;
			d-cache-size = <32768>;
			d-tlb-sets = <1>;
			d-tlb-size = <32>;
			device_type = "cpu";
			i-cache-block-size = <64>;
			i-cache-sets = <64>;
			i-cache-size = <32768>;
			i-tlb-sets = <1>;
			i-tlb-size = <32>;
			mmu-type = "riscv,sv39";
			reg = <2>;
			riscv,isa = "rv64imafdc";
			tlb-split;
			status = "okay";
			cpu2_intc: interrupt-controller {
				#interrupt-cells = <1>;
				compatible = "riscv,cpu-intc";
				interrupt-controller;
			};
		};
		cpu3: cpu@3 {
			compatible = "sifive,u54-mc", "sifive,rocket0", "riscv";
			d-cache-block-size = <64>;
			d-cache-sets = <64>;
			d-cache-size = <32768>;
			d-tlb-sets = <1>;
			d-tlb-size = <32>;
			device_type = "cpu";
			i-cache-block-size = <64>;
			i-cache-sets = <64>;
			i-cache-size = <32768>;
			i-tlb-sets = <1>;
			i-tlb-size = <32>;
			mmu-type = "riscv,sv39";
			reg = <3>;
			riscv,isa = "rv64imafdc";
			tlb-split;
			status = "okay";
			cpu3_intc: interrupt-controller {
				#interrupt-cells = <1>;
				compatible = "riscv,cpu-intc";
				interrupt-controller;
			};
		};
		cpu4: cpu@4 {
			compatible = "sifive,u54-mc", "sifive,rocket0", "riscv";
			d-cache-block-size = <64>;
			d-cache-sets = <64>;
			d-cache-size = <32768>;
			d-tlb-sets = <1>;
			d-tlb-size = <32>;
			device_type = "cpu";
			i-cache-block-size = <64>;
			i-cache-sets = <64>;
			i-cache-size = <32768>;
			i-tlb-sets = <1>;
			i-tlb-size = <32>;
			mmu-type = "riscv,sv39";
			reg = <4>;
			riscv,isa = "rv64imafdc";
			tlb-split;
			status = "okay";
			cpu4_intc: interrupt-controller {
				#interrupt-cells = <1>;
				compatible = "riscv,cpu-intc";
				interrupt-controller;
			};
		};
	};

	soc {
		#address-cells = <2>;
		#size-cells = <2>;
		compatible = "simple-bus";
		ranges;

		plic0: interrupt-controller@c000000 {
			#interrupt-cells = <1>;
			compatible = "riscv,plic0";
			interrupt-controller;
			interrupts-extended = <
				&cpu0_intc 11
				&cpu1_intc 11 &cpu1_intc 9
				&cpu2_intc 11 &cpu2_intc 9
				&cpu3_intc 11 &cpu3_intc 9
				&cpu4_intc 11 &cpu4_intc 9>;
			reg = <0x0 0xc000000 0x0 0x4000000>;
			reg-names = "control";
			riscv,max-priority = <7>;
			riscv,ndev = <226>;
		};

		clint0: clint@2000000 {
			compatible = "riscv,clint0";
			interrupts-extended = <&cpu0_intc 3 &cpu0_intc 7 &cpu1_intc 3 &cpu1_intc 7 &cpu2_intc 3 &cpu2_intc 7 &cpu3_intc 3 &cpu3_intc 7 &cpu4_intc 3 &cpu4_intc 7>;
			reg = <0x0 0x2000000 0x0 0x10000>;
			reg-names = "control";
		};

		uart0: serial@sp_uart0 {
			compatible = "sunplus,sp7021-uart";
			reg = <0x0 0x9c000900 0x0 0x80>;
		};

		intc: interrupt-controller@9c003500 {
			compatible = "sunplus,sp-intc";
			interrupt-controller;
			reg = <0x0 0x9c003500 0x0 0x80>, // G106
				  <0x0 0x9c003580 0x0 0x80>; // G107
			#interrupt-cells = <2>;
			interrupt-parent = <&plic0>;
			interrupts = <2 7>; // 2,7 for core0
			ext0-mask = <0xf>; /* core0-3 */
			ext1-mask = <0xe>; /* core1-3 */
		};

#if 0 // for sp-intc & sp-ipc test
		ipc_test: ipc_test@G258 {
			compatible = "sunplus,sp-ipc-test";
			reg = <0x0 0x9c008100 0x0 0x100>; /* G258 ~ G259 */
			interrupt-parent = <&intc>;
			interrupts =
				<2 IRQ_TYPE_EDGE_RISING>, /* U54_DIRECT_INT0 */
				<3 IRQ_TYPE_EDGE_RISING>, /* U54_DIRECT_INT1 */
				<4 IRQ_TYPE_EDGE_RISING>, /* U54_DIRECT_INT2 */
				<5 IRQ_TYPE_EDGE_RISING>, /* U54_DIRECT_INT3 */
				<6 IRQ_TYPE_EDGE_RISING>, /* U54_DIRECT_INT4 */
				<7 IRQ_TYPE_EDGE_RISING>, /* U54_DIRECT_INT5 */
				<8 IRQ_TYPE_EDGE_RISING>, /* U54_DIRECT_INT6 */
				<9 IRQ_TYPE_EDGE_RISING>, /* U54_DIRECT_INT7 */
				<10 IRQ_TYPE_EDGE_RISING>, /* U54_INT */
				<84 (IRQ_TYPE_EDGE_RISING | SP_INTC_EXT_INT1)>, /* ACHIPCPU0_DIRECT_INT0 */
				<85 (IRQ_TYPE_EDGE_RISING | SP_INTC_EXT_INT1)>, /* ACHIPCPU0_DIRECT_INT1 */
				<86 (IRQ_TYPE_EDGE_RISING | SP_INTC_EXT_INT1)>, /* ACHIPCPU0_DIRECT_INT2 */
				<87 (IRQ_TYPE_EDGE_RISING | SP_INTC_EXT_INT1)>, /* ACHIPCPU0_DIRECT_INT3 */
				<88 (IRQ_TYPE_EDGE_RISING | SP_INTC_EXT_INT1)>, /* ACHIPCPU0_DIRECT_INT4 */
				<89 (IRQ_TYPE_EDGE_RISING | SP_INTC_EXT_INT1)>, /* ACHIPCPU0_DIRECT_INT5 */
				<90 (IRQ_TYPE_EDGE_RISING | SP_INTC_EXT_INT1)>, /* ACHIPCPU0_DIRECT_INT6 */
				<91 (IRQ_TYPE_EDGE_RISING | SP_INTC_EXT_INT1)>, /* ACHIPCPU0_DIRECT_INT7 */
				<92 (IRQ_TYPE_EDGE_RISING | SP_INTC_EXT_INT1)>; /* ACHIPCPU0_INT */
		};
	};
#endif

};
